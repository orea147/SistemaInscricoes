// <auto-generated />
using System;
using Inscricoes.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Inscricoes.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240811011307_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Inscricoes.Domain.Entities.Inscricao", b =>
                {
                    b.Property<int>("InscricaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InscricaoId"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LeadId")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroInscricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OfertaId")
                        .HasColumnType("integer");

                    b.Property<int>("ProcessoSeletivoId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("InscricaoId");

                    b.HasIndex("LeadId");

                    b.HasIndex("OfertaId");

                    b.HasIndex("ProcessoSeletivoId");

                    b.ToTable("Inscricoes");
                });

            modelBuilder.Entity("Inscricoes.Domain.Entities.Lead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LeadId"));

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("LeadId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("Inscricoes.Domain.Entities.Oferta", b =>
                {
                    b.Property<int>("OfertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OfertaId"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("VagasDisponiveis")
                        .HasColumnType("integer");

                    b.HasKey("OfertaId");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Inscricoes.Domain.Entities.ProcessoSeletivo", b =>
                {
                    b.Property<int>("ProcessoSeletivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProcessoSeletivoId"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("ProcessoSeletivoId");

                    b.ToTable("ProcessosSeletivos");
                });

            modelBuilder.Entity("Inscricoes.Domain.Entities.Inscricao", b =>
                {
                    b.HasOne("Inscricoes.Domain.Entities.Lead", "Lead")
                        .WithMany("Inscricoes")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inscricoes.Domain.Entities.Oferta", "Oferta")
                        .WithMany("Inscricoes")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inscricoes.Domain.Entities.ProcessoSeletivo", "ProcessoSeletivo")
                        .WithMany("Inscricoes")
                        .HasForeignKey("ProcessoSeletivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");

                    b.Navigation("Oferta");

                    b.Navigation("ProcessoSeletivo");
                });

            modelBuilder.Entity("Inscricoes.Domain.Entities.Lead", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("Inscricoes.Domain.Entities.Oferta", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("Inscricoes.Domain.Entities.ProcessoSeletivo", b =>
                {
                    b.Navigation("Inscricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
